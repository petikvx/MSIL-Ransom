using System.Xml.Linq;

namespace GraphComposite;

public class ConvertFromGraphToXElement<Tkey, Tval> : ConvertFromGraph<XElement, Tkey, Tval>
{
	protected override XElement MakeInstance(Tkey key, Tval val)
	{
		return ConvertFromGraphToXElement<Tkey, Tval>._200B_202E_200C_202B_202D_200D_206A_202E_200B_206A_206B_206C_206E_202B_206D_206C_200C_200E_202D_200B_202E_206C_206F_202A_200B_206A_200E_200E_206F_206C_200E_202A_200B_206E_200C_202E_202C_200F_202D_202B_202E(ConvertFromGraphToXElement<Tkey, Tval>._200B_206B_206D_202E_206B_206C_200F_206A_202E_200D_200E_202A_202A_206C_200F_200D_200F_200D_202A_206F_202A_200C_206F_202A_202D_202C_202C_202D_202D_200B_206C_206A_206A_202B_202B_206C_206D_200B_202C_206D_202E(key.ToString()), (object)val);
	}

	protected override void AddChild(XElement parent, XElement child)
	{
		ConvertFromGraphToXElement<Tkey, Tval>._200D_202E_202D_206D_206B_200B_202D_202B_202E_206B_206F_200D_202B_206C_200C_206F_202D_200C_200E_200C_200E_200B_200C_206E_206E_206E_202B_206D_206F_200C_200D_206D_200F_206C_202E_206F_202A_200F_202E_202B_202E((XContainer)(object)parent, (object)child);
	}

	protected override XElement GetParent(XElement child)
	{
		return ConvertFromGraphToXElement<Tkey, Tval>._202D_206F_202C_202E_200D_200B_202C_202E_206A_200B_202E_206C_200B_206B_202C_206A_200E_202B_206E_206A_200F_202B_202A_202B_206E_202C_202B_200E_202E_200F_200E_202C_206C_206C_206C_202E_202E_206D_200C_206E_202E((XObject)(object)child);
	}

	protected override XElement GetChild(XElement parent, Tkey key)
	{
		return ConvertFromGraphToXElement<Tkey, Tval>._202D_200E_202D_202A_206F_202C_200D_206F_200C_200B_206F_206A_206C_200B_206E_202E_206C_200C_200E_206E_200E_202E_206D_200B_202D_202D_202D_202E_206E_206E_206D_202E_206E_202E_200D_200F_200F_202A_200F_206C_202E((XContainer)(object)parent, ConvertFromGraphToXElement<Tkey, Tval>._200B_206B_206D_202E_206B_206C_200F_206A_202E_200D_200E_202A_202A_206C_200F_200D_200F_200D_202A_206F_202A_200C_206F_202A_202D_202C_202C_202D_202D_200B_206C_206A_206A_202B_202B_206C_206D_200B_202C_206D_202E(key.ToString()));
	}

	protected override void OnEdge(Tkey sourceKey, Tkey targetKey)
	{
	}
}
